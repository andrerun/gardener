apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  annotations:
    resources.gardener.cloud/origin: garden/pvc-autoscaler
  labels:
    app: pvc-autoscaler
    gardener.cloud/role: pvc-autoscaler
    prometheus: aggregate # seed
    resources.gardener.cloud/managed-by: gardener
  name: aggregate-pvc-autoscaler
  namespace: garden
spec:
  namespaceSelector:
    matchNames:
      - garden
  podMetricsEndpoints:
    - relabelings:
        - action: keep
          regex: ^(pvc_autoscaler_max_capacity_reached_total|pvc_autoscaler_resized_total|pvc_autoscaler_skipped_total|pvc_autoscaler_threshold_reached_total)$
          sourceLabels:
            - __name__
#      bearerTokenSecret:
#        key: "" # TODO: Andrey: P1: How do we pass prometheus' token, so the RBAC proxy will allow the scrape?
      port: https
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
  selector:
    matchLabels:
      app: pvc-autoscaler
      gardener.cloud/role: pvc-autoscaler

#        - action: keep
#          regex: extension-(.+);true;(.+)
#          sourceLabels:
#            - __meta_kubernetes_namespace
#            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
#            - __meta_kubernetes_pod_annotation_prometheus_io_port
#        - action: replace
#          regex: (.+)
#          sourceLabels:
#            - __meta_kubernetes_pod_annotation_prometheus_io_name
#          targetLabel: job
#        - action: replace
#          regex: ([^:]+)(?::\d+)?;(\d+)
#          replacement: $1:$2
#          sourceLabels:
#            - __address__
#            - __meta_kubernetes_pod_annotation_prometheus_io_port
#          targetLabel: __address__
#        - action: labelmap
#          regex: __meta_kubernetes_pod_label_(.+)

